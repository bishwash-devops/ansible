- block:
  - name: Download {{opentsdb.version}}
    unarchive:
      src: "https://github.com/OpenTSDB/opentsdb/releases/download/{{opentsdb.ver}}/{{opentsdb.version}}.tar.gz"
      dest: "{{basedir}}"
      remote_src: yes
      creates: "{{basedir}}/{{opentsdb.version}}"
  
  - name: Create Symbolic link to opentsdb version
    file:
      dest: "{{opentsdb.home}}"
      src: "{{basedir}}/{{opentsdb.version}}"
      state: link
      
  - name: Run {{opentsdb.home}}/build.sh
    command: "./build.sh"
    args: 
      chdir: "{{opentsdb.home}}"
      creates: "{{opentsdb.home}}/build"
        
  - name: Set Environment Variables for the User
    lineinfile:
      path: "/home/{{user}}/.bashrc"
      line: "{{item}}"
      state: present
    with_items:
      - "export OPENTSDB_HOME={{opentsdb.home}}"
      - export PATH=$PATH:$OPENTSDB_HOME/build

  - name: Copy Configuration to {{opentsdb.home}}/opentsdb.conf
    copy:
      src: "{{opentsdb.home}}/src/opentsdb.conf"
      dest: "{{opentsdb.home}}/opentsdb.conf"
      remote_src: yes
        
  - name: Configure OpenTSDB with HBase Cluster
    lineinfile:
      path: "{{opentsdb.home}}/opentsdb.conf"
      regexp: "{{item.regexp}}"
      line: "{{item.line}}"
      state: present
    with_items:
      - { regexp: "tsd.http.staticroot =", line: "tsd.http.staticroot = {{opentsdb.staticroot}}" }
      - { regexp: "tsd.http.cachedir =", line: "tsd.http.cachedir = {{opentsdb.cachedir}}" }
      - { regexp: "tsd.storage.hbase.zk_quorum =", line: "tsd.storage.hbase.zk_quorum = {{opentsdb.zk_quorum}}" }
      - { regexp: "tsd.network.bind =", line: "tsd.network.bind = {{opentsdb.network_bind}}" }
      - { regexp: "tsd.network.port =", line: "tsd.network.port = {{opentsdb.port}}" }
      

  become: yes
  become_user: "{{user}}"
